@use '@angular/material' as mat;
@use 'sass:math';
@use 'sass:map';

// Paletas de colores
$palettes: (
  red: mat.$red-palette,
  green: mat.$green-palette,
  blue: mat.$blue-palette,
  yellow: mat.$yellow-palette,
  cyan: mat.$cyan-palette,
  magenta: mat.$magenta-palette,
  orange: mat.$orange-palette,
  chartreuse: mat.$chartreuse-palette,
  spring-green: mat.$spring-green-palette,
  azure: mat.$azure-palette,
  violet: mat.$violet-palette,
  rose: mat.$rose-palette,
);

// Configuraci√≥n de densidad
$density-config: -2;

$light-themes: (
  'azure-blue': (
    primary: mat.$azure-palette,
    tertiary: mat.$blue-palette,
  ),
  'red-cyan': (
    primary: mat.$red-palette,
    tertiary: mat.$cyan-palette,
  ),
  'green-magenta': (
    primary: mat.$green-palette,
    tertiary: mat.$magenta-palette,
  ),
  'blue-orange': (
    primary: mat.$blue-palette,
    tertiary: mat.$orange-palette,
  ),
  'yellow-violet': (
    primary: mat.$yellow-palette,
    tertiary: mat.$violet-palette,
  ),
  'chartreuse-spring-green': (
    primary: mat.$chartreuse-palette,
    tertiary: mat.$spring-green-palette,
  ),
);

$dark-themes: (
  'cyan-orange': (
    primary: mat.$cyan-palette,
    tertiary: mat.$orange-palette,
  ),
  'magenta-chartreuse': (
    primary: mat.$magenta-palette,
    tertiary: mat.$chartreuse-palette,
  ),
  'rose-yellow': (
    primary: mat.$rose-palette,
    tertiary: mat.$yellow-palette,
  ),
  'violet-azure': (
    primary: mat.$violet-palette,
    tertiary: mat.$azure-palette,
  ),
  'spring-green-blue': (
    primary: mat.$spring-green-palette,
    tertiary: mat.$blue-palette,
  ),
  'orange-red': (
    primary: mat.$orange-palette,
    tertiary: mat.$red-palette,
  ),
);

@mixin scrollbar-overrides() {
  *::-webkit-scrollbar {
    width: 0.4em;
  }

  *::-webkit-scrollbar-thumb {
    background-color: var(--mat-sys-surface-container-highest);
    border-radius: 0.4rem;
    border: 1px solid var(--mat-sys-secondary);
  }

  *::-webkit-scrollbar-track {
    background: var(--mat-sys-surface-container);
  }

  *::-webkit-scrollbar-thumb:hover {
    cursor: pointer;
  }

  *::-webkit-scrollbar-thumb:active {
    background-color: var(--mat-sys-secondary); /* Color diferente cuando se arrastra */
  }
}

@mixin toolbar-overrides() {
  @include mat.toolbar-overrides(
    (
      container-background-color: var(--mat-sys-primary-container),
      container-text-color: var(--mat-sys-primary),
    )
  );
}

@mixin sidenav-overrides() {
  @include mat.sidenav-overrides(
    (
      container-background-color: var(--mat-sys-surface-container-low),
      container-divider-color: var(--mat-sys-outline-variant),
      container-width: 200px,
    )
  );
}

@mixin badge-overrides() {
  @include mat.badge-overrides(
    (
      background-color: var(--mat-sys-tertiary),
      text-color: var(--mat-sys-on-tertiary),
      disabled-state-background-color: var(--mat-sys-tertiary),
      disabled-state-text-color: var(--mat-sys-on-tertiary),
    )
  );
}

// Overrides comunes
@mixin common-overrides() {
  @include toolbar-overrides();
  @include scrollbar-overrides();
  @include badge-overrides();
  @include sidenav-overrides();
}

@mixin dynamic-theme() {
  html {
    color-scheme: light dark;

    // Generar temas claros
    @each $name, $theme in $light-themes {
      .#{$name}-light-theme {
        @include mat.theme(
          (
            color: (
              theme-type: light,
              primary: map.get($theme, primary),
              tertiary: map.get($theme, tertiary),
            ),
            typography: 'Noto Sans',
            density: $density-config,
          )
        );

        @include common-overrides();
      }
    }
  }

  // Generar temas oscuros
  @each $name, $theme in $dark-themes {
    .#{$name}-dark-theme {
      @include mat.theme(
        (
          color: (
            theme-type: dark,
            primary: map.get($theme, primary),
            tertiary: map.get($theme, tertiary),
          ),
          typography: 'Noto Sans',
          density: $density-config,
        )
      );

      @include common-overrides();
    }
  }
}
